<?xml version="1.0" ?>
<robot name="prota" xmlns:xacro="http://www.ros.org/wiki/xacro" >

<xacro:property name="body_color" value="Gazebo/Silver" />

<gazebo>
  <plugin name="control" filename="libgazebo_ros_control.so"/>
</gazebo>
<gazebo reference="base_link">
  <material>${body_color}</material>
  <mu1>1</mu1>
  <mu2>1</mu2>
  <selfCollide>true</selfCollide>
  <gravity>true</gravity>
</gazebo>

<gazebo reference="laser_1_1">
  <material>${body_color}</material>
  <mu1>1</mu1>
  <mu2>1</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="layer_2_1_1">
  <material>${body_color}</material>
  <mu1>1</mu1>
  <mu2>1</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="top_plate_1">
  <material>${body_color}</material>
  <mu1>1</mu1>
  <mu2>1</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="realsense_1">
  <material>${body_color}</material>
  <mu1>1</mu1>
  <mu2>1</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="tof_3_1_1">
  <material>${body_color}</material>
  <mu1>1</mu1>
  <mu2>1</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="tof_4_1_1">
  <material>${body_color}</material>
  <mu1>1</mu1>
  <mu2>1</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="tof_5_1_1">
  <material>${body_color}</material>
  <mu1>1</mu1>
  <mu2>1</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="tof_1_1_1">
  <material>${body_color}</material>
  <mu1>1</mu1>
  <mu2>1</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="right_wheel_1_1">
  <material>${body_color}</material>
  <mu1>100</mu1>
  <mu2>100</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="left_wheel_1_1">
  <material>${body_color}</material>
  <mu1>100</mu1>
  <mu2>100</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="tof_2_1_1">
  <material>${body_color}</material>
  <mu1>1</mu1>
  <mu2>1</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="tof_6_1_1">
  <material>${body_color}</material>
  <mu1>1</mu1>
  <mu2>1</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="right_caster_1">
  <material>${body_color}</material>
  <mu1>0.01</mu1>
  <mu2>0.01</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="left_caster_1">
  <material>${body_color}</material>
  <mu1>0.01</mu1>
  <mu2>0.01</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo>
  <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">

    <!-- Plugin update rate in Hz -->
    <updateRate>10</updateRate>

    <!-- Name of left joint, defaults to `left_joint` -->
    <leftJoint>Rev29</leftJoint>

    <!-- Name of right joint, defaults to `right_joint` -->
    <rightJoint>Rev28</rightJoint>

    <!-- The distance from the center of one wheel to the other, in meters, defaults to 0.34 m -->
    <wheelSeparation>0.146687</wheelSeparation>

    <!-- Diameter of the wheels, in meters, defaults to 0.15 m -->
    <wheelDiameter>0.0648</wheelDiameter>
    
    <!-- Wheel acceleration, in rad/s^2, defaults to 0.0 rad/s^2 -->
    <wheelAcceleration>1.0</wheelAcceleration>

    <!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
    <wheelTorque>20</wheelTorque>

    <!-- Topic to receive geometry_msgs/Twist message commands, defaults to `cmd_vel` -->
    <commandTopic>cmd_vel</commandTopic>

    <!-- Topic to publish nav_msgs/Odometry messages, defaults to `odom` -->
    <odometryTopic>odom</odometryTopic>

    <!-- Odometry frame, defaults to `odom` -->
    <odometryFrame>odom</odometryFrame>

    <!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
    <robotBaseFrame>base_link</robotBaseFrame>

    <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
    <odometrySource>1</odometrySource>

    <!-- Set to true to publish transforms for the wheel links, defaults to false -->
    <publishWheelTF>true</publishWheelTF>

    <!-- Set to true to publish transforms for the odometry, defaults to true -->
    <publishOdom>true</publishOdom>

    <!-- Set to true to publish sensor_msgs/JointState on /joint_states for the wheel joints, defaults to false -->
    <publishWheelJointState>true</publishWheelJointState>

    <!-- Set to true to swap right and left wheels, defaults to true -->
    <legacyMode>false</legacyMode>
  </plugin>
</gazebo>

</robot>
